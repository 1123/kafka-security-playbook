apiVersion: v1
kind: Pod
metadata:
  name: kafka
  namespace: rbac
  labels:
    app: kafka
spec:
  containers:
  - name: kafka
    image: gcr.io/solutionsarchitect-01/kafka-rbac
    ports:
      - containerPort: 9092
      - containerPort: 9093
      - containerPort: 8090
      - containerPort: 9094
    env:
      # ============= CONFIG SHARED BY BROKER AND MDS ===============
      # Setup super.users with unlimited access to cluster
      # for broker it means unlimited access to broker
      # for MDS it means unlimited access to MDS
      # admin is for broker-to-broker communication
      # mds is for MDS to talk to broker
      # professor is an LDAP user - for initial bootstrapping of MDS users
      - name: KAFKA_SUPER_USERS
        value: User:admin;User:mds;User:professor

      # ===================== CONFIGURE BROKER =======================
      # GENERAL CONFIG
      - name: KAFKA_BROKER_ID
        value: "1"
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: 'zookeeper:2181'
      - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
        value: "1"

      # CONFIGURE LISTENERS
      # RBAC needs separate internal and external listeners
      # OUTSIDE listener is needed if you want to talk to this kafka from your macbook - your macbook is not member of docker network
      # created by compose, so won't know the hostname called 'broker', which will be returned in a list of listeners when console producer or consumer
      # try to get full listener list from bootstrap server
      - name: KAFKA_ADVERTISED_LISTENERS
        value: INTERNAL://localhost:9093,EXTERNAL://kafka:9092,OUTSIDE://localhost:9094
      - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      - name: KAFKA_CONFLUENT_METADATA_SECURITY_PROTOCOL
        value: SASL_PLAINTEXT

      # Configure interbroker listener
      - name: KAFKA_INTER_BROKER_LISTENER_NAME
        value: INTERNAL
      - name: KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL
        value: PLAIN
      - name: KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS
        value: PLAIN
      # note we're only specifying two users, one for broker-to-broker communication (admin) and one for MDS to talk to broker (mds)
      - name: KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG
        value: |
                                                            \
                                                            org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                            username="admin" \
                                                            password="admin-secret" \
                                                            user_admin="admin-secret" \
                                                            user_mds="mds-secret";

      # Configure external listener
      - name: KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS
        value: OAUTHBEARER
      - name: KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS
        value: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      - name: KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS
        value: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      - name: KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG
        value: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
               publicKeyPath="/tmp/conf/public.pem";

      # Configure external listener
      - name: KAFKA_LISTENER_NAME_OUTSIDE_SASL_ENABLED_MECHANISMS
        value: OAUTHBEARER
      - name: KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS
        value: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      - name: KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS
        value: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      - name: KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG
        value: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required publicKeyPath="/tmp/conf/public.pem";

      # CONFIGURE AUTHORIZER
      # Setup kafka to use RBAC authorizer
      - name: KAFKA_AUTHORIZER_CLASS_NAME
        value: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer

      # ======================== CONFIGURE MDS ====================================
      # Configure how MDS talks to broker
      - name: KAFKA_CONFLUENT_METADATA_BOOTSTRAP_SERVERS
        value: INTERNAL://localhost:9093
      - name: KAFKA_CONFLUENT_METADATA_SASL_MECHANISM
        value: PLAIN
      - name: KAFKA_CONFLUENT_METADATA_SASL_JAAS_CONFIG
        value: |
                                                  \
                                                  org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                  username="mds" \
                                                  password="mds-secret";
      # Configure how MDS stores its data in a topic
      # supposedly more stuff can be overridden with the same prefix
      - name: KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR
        value: "1"

      # Configure MDS listener and http server
      - name: KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD
        value: BEARER
      - name: KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_ROLES
        value: '**'
      - name: KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS
        value: http://0.0.0.0:8090
      - name: KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS
        value: http://kafka:8090

      # Configure RBAC token server (authentication)
      - name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE
        value: 'true'
      - name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS
        value: "3600000"
      - name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM
        value: RS256
      - name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH
        value: /tmp/conf/keypair.pem
      - name: KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH
        value: /tmp/conf/public.pem

      # Configure RBAC authorizer
      # KAFKA_CONFLUENT_AUTHORIZER_SCOPE: myCluster
      - name: KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS
        value: CONFLUENT,ZK_ACL
      # KAFKA_CONFLUENT_AUTHORIZER_METADATA_PROVIDER: RBAC
      - name: KAFKA_CONFLUENT_AUTHORIZER_GROUP_PROVIDER
        value: RBAC
      # KAFKA_CONFLUENT_METADATA_SERVER_SCOPE: ''

      # Configure MDS to talk to AD/LDAP
      - name: KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL
        value: com.sun.jndi.ldap.LdapCtxFactory
      - name: KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT
        value: "3000"
      - name: KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL
        value: ldap://openldap:389
      # how to authenticate to LDAP
      - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL
        value: cn=admin,dc=planetexpress,dc=com
      - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS
        value: GoodNewsEveryone
      - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION
        value: simple
      # how to locate users and groups
      - name: KAFKA_LDAP_USER_SEARCH_BASE
        value: ou=people,dc=planetexpress,dc=com
      - name: KAFKA_LDAP_GROUP_SEARCH_BASE
        value: ou=people,dc=planetexpress,dc=com
      - name: KAFKA_LDAP_USER_NAME_ATTRIBUTE
        value: uid
      - name: KAFKA_LDAP_USER_OBJECT_CLASS
        value: inetOrgPerson
      - name: KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE
        value: ou
      - name: KAFKA_LDAP_GROUP_NAME_ATTRIBUTE
        value: cn
      - name: KAFKA_LDAP_GROUP_OBJECT_CLASS
        value: group

      # ======================= CONFIGURE METRICS REPORTER =========================
      - name: KAFKA_METRIC_REPORTERS
        value: io.confluent.metrics.reporter.ConfluentMetricsReporter
      - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
        value: "1"

      # point at our 'INTERNAL' listener
      - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
        value: kafka:9093
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      - name: CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL
        value: SASL_PLAINTEXT
      - name: CONFLUENT_METRICS_REPORTER_SASL_MECHANISM
        value: PLAIN
      - name: CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG
        value: |
                                                    \
                                                    org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                    username="admin" \
                                                    password="admin-secret";

      # ======================= OTHER BROKER STUFF =================================
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
